00001  0000             ; NUMBER FORMAT
00002  0001             ; SIID DDDD
00003  0001             ; SIGNED 8-BIT FIXED POINT NUMBER
00004  0001             *=$1000
00005  1000             ; VARIABLES
00006  1000             TEMP
00007  1000  00                    BYTE    $00
00008  1001             TEMP2
00009  1001  00                    BYTE    $00
00010  1002             COUNTER
00011  1002  00                    BYTE    $00
00012  1003             XPIXEL
00013  1003  00                    BYTE    $00
00014  1004             YPIXEL
00015  1004  00                    BYTE    $00
00016  1005             ITERATIONS 
00017  1005  00                    BYTE    $00
00018  1006             PIXELCOUNTER 
00019  1006  00                    BYTE    $00
00020  1007             CX
00021  1007  00                    BYTE    $00
00022  1008             CY
00023  1008  00                    BYTE    $00
00024  1009             ZX
00025  1009  00                    BYTE    $00
00026  100A             ZY
00027  100A  00                    BYTE    $00
00028  100B             ITERATOR 
00029  100B  00                    BYTE    $00
00030  100C             *=$2000
00031  2000             ;
00032  2000             ; JUMP TO MAIN LOOP
00033  2000             START
00034  2000  4C 3E 20              JMP     MAIN
00035  2003             ;
00036  2003             ; DIVISION ROUTINE
00037  2003             ; BIG SHOUTOUT TO THIS PAGE
00038  2003             ; HTTP://6502.ORG/TUTORIALS/COMPARE_INSTRUCTIONS.HTML
00039  2003             DIVIDE     ; A / TEMP
00040  2003  48                    PHA
00041  2004  A9 00                 LDA     #00
00042  2006  8D 02 10              STA     COUNTER
00043  2009  68                    PLA
00044  200A             DIVIDELOOP 
00045  200A  CD 00 10              CMP     TEMP    ; CHECK IF TEMP < A
00046  200D  30 0B                 BMI     DIVIDEEND; IF IT IS, END < A
00047  200F  F0 09                 BEQ     DIVIDEEND; IF IT IS, END
00048  2011  ED 00 10              SBC     TEMP    ; IF IT ISN'T SUBTRACT
00049  2014  EE 02 10              INC     COUNTER ; INCREMENT COUNTER
00050  2017  4C 0A 20              JMP     DIVIDELOOP; RETURN TO CHECK
00051  201A             DIVIDEEND  ; IF DIVISION COMPLETE
00052  201A  8D 00 10              STA     TEMP    ; STORE REMAINDER IN TEMP
00053  201D  AD 02 10              LDA     COUNTER ; STORE DIVISON RESULT IN A
00054  2020  60                    RTS
00055  2021             ;
00056  2021             ; MULTIPLICATION ROUTINE
00057  2021             ; COULD BE MADE MORE EFFICIENT BY CHECKING WHICH ONE IS SMALLER BEFOREHAND
00058  2021             MULTIPLY   ; A*TEMP
00059  2021  8D 01 10              STA TEMP2
00060  2024             MULTIPLYLOOP 
00061  2024  CE 00 10              DEC TEMP        ; DECREMENT TEMP
00062  2027  F0 06                 BEQ MULTIPLYEND ; CHECK IF TEMP == 0
00063  2029  6D 01 10              ADC TEMP2
00064  202C  4C 24 20              JMP MULTIPLYLOOP
00065  202F             MULTIPLYEND 
00066  202F  60                    RTS
00067  2030             ; DRAW PIXEL ROUTINE
00068  2030             DRAWPIXEL 
00069  2030                        ; WILL DRAW WHICHEVER PIXEL IS CURRENTLY BEING POINTED AT
00070  2030                        ; BY XPIXEL & YPIXEL
00071  2030                        ; PROBABLY SOMETHING WHERE IT'S CMP'D WITH A MINIMUM VALUE, THEN
00072  2030                        ; BITSHIFT LEFT OF THE RELEVANT LINE, OR #01,
00073  2030                        ; UNTIL THE CHARACTER LINE IS FINISHED
00074  2030  60                    RTS
00075  2031             
00076  2031             SETUPSCREEN 
00077  2031                        ; STARTS AT $0400 UNTIL $040F
00078  2031  A2 10                 LDX #16
00079  2033             SCREENLOOP 
00080  2033  8A                    TXA
00081  2034  9D 00 04              STA $0400,X
00082  2037  CA                    DEX
00083  2038  F0 03                 BEQ SCREENEND
00084  203A  4C 33 20              JMP SCREENLOOP
00085  203D                        ; WILL CREATE 16X16 CHARACTER GRID IN THE MIDDLE OF THE SCREEN
00086  203D             SCREENEND 
00087  203D  60                    RTS
00088  203E             
00089  203E             ; MAIN LOOP
00090  203E             MAIN
00091  203E                        ;LDA     #04
00092  203E                        ;STA     TEMP
00093  203E                        ;LDA     #01
00094  203E  20 31 20              JSR     SETUPSCREEN
00095  2041                        ;STA     $D020
00096  2041  4C 3E 20              JMP     MAIN
00097  2044             

******* 24 Label(s) *******
counter = $1002 
cx = $1007 
cy = $1008 
DIVIDE = $2003 
DIVIDEEND = $201A 
DIVIDELOOP = $200A 
DRAWPIXEL = $2030 
iterations = $1005 
iterator = $100B 
MAIN = $203E 
MULTIPLY = $2021 
MULTIPLYEND = $202F 
MULTIPLYLOOP = $2024 
pixelcounter = $1006 
SCREENEND = $203D 
SCREENLOOP = $2033 
SETUPSCREEN = $2031 
START = $2000 
temp = $1000 
temp2 = $1001 
xPixel = $1003 
yPixel = $1004 
zx = $1009 
zy = $100A 

******* 13 Unused label(s) *******
cx
cy
DIVIDE
DRAWPIXEL
iterations
iterator
MULTIPLY
pixelcounter
START
xPixel
yPixel
zx
zy

******* 1 Variable(s) *******
tgt_c64  = $0001
******* 1 Unused variables(s) *******
tgt_c64

